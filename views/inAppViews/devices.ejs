<!-- views/devices.ejs -->
<%- include('frameTop') -%>
<section>
  <div class="row">
    <div class="col">
      <h2 class="mb-4"><%= texts.Devices %></h2>
    </div>
    <div class="col text-end mb-4">
      <span id="timer" class="text-nowrap"><%= texts.Next_refresh %>: 60</span>
      <a href="" class="btn btn-primary"><%= texts.Refresh %></a>
    </div>
  </div>

  <div class="table-responsive hideOnMobile">
    <table class="table table-hover table-striped" id="deviceTable">
      <thead>
        <tr>
          <th onclick="sortTable(0)"><%= texts.Hostname %></th>
          <th onclick="sortTable(1)"><%= texts.MAC_Address %></th>
          <th onclick="sortTable(2)"><%= texts.Status %></th>
          <th onclick="sortTable(3)"><%= texts.Last_Seen_Date %></th>
          <th><%= texts.Delete %></th>
        </tr>
      </thead>
      <tbody>
        <% if (typeof devices !=='undefined' ) { for (let i = 0; i < devices.length; i++) { %>
        <tr>
          <td><%= devices[i].hostName %></td>
          <td><%= devices[i].macAddress %></td>
          <td>
            <% if (devices[i].online) { %>
            <span class="text-success fw-bold"><%= texts.Online %></span>
            <% } else { %>
            <span class="text-danger fw-bold"><%= texts.Offline %></span>
            <% } %>
          </td>
          <td><%= devices[i].lastSeenDate_converted %></td>
          <td style="width: 20px; white-space: nowrap">
            <a href="/devices/delete/<%=devices[i]._id %>" class="btn btn-block btn-danger"><i class="bi bi-trash-fill"></i></a>
          </td>
        </tr>
        <% }} %>
      </tbody>
    </table>
  </div>
  <div class="hideOnDesktop">
    <% if (typeof apps !=='undefined' ) { for (let i = 0; i < devices.length; i++) { %>
    <div class="card">
      <div class="card-body d-flex justify-content-between align-items-center">
        <div>
          <h5 class="card-title fw-bold"><%= devices[i].hostName %></h5>
          <p class="card-text"><%= texts.Status %>:
            <% if (devices[i].online) { %>
            <span class="text-success fw-bold"><%= texts.Online %></span>
            <% } else { %>
            <span class="text-danger fw-bold"><%= texts.Offline %></span>
            <% } %>
          </p>
        </div>
        <button class="btn btn-primary" id="collapseText<%= i %>" type="button" data-bs-toggle="collapse" data-bs-target="#collapseInfo<%= i %>" aria-expanded="false" aria-controls="collapseInfo<%= i %>" onclick="toggleCollapse(<%= i %>)">
          <%= texts.Show %> <i class="bi bi-chevron-down"></i>
        </button>
      </div>
      <div id="collapseInfo<%= i %>" class="collapse">
        <div class="card-body">
          <p class="card-text"><%= texts.MAC_Address %>: <%= devices[i].macAddress %></p>
          <p class="card-text"><%= texts.Last_Seen_Date %>: <%= devices[i].lastSeenDate_converted %></p>
          <a href="/devices/delete/<%=devices[i]._id %>" class="btn btn-danger"><i class="bi bi-trash-fill"></i> <%= texts.Delete %></a>
        </div>
      </div>
    </div>
    <% }} %>
  </div>

  <script>
    function toggleCollapse(index) {
      const collapseText = document.getElementById(`collapseText${index}`);

      if (collapseText.classList.contains('collapsed')) {
        collapseText.innerHTML = `<%= texts.Show %> <i class='bi bi-chevron-down'></i>`;
      } else {
        collapseText.innerHTML = `<%= texts.Hide %> <i class='bi bi-chevron-up'></i>`;

      }
    }
  </script>


</section>

<script>
  // Countdown timer
  let seconds = 60;
  const timerElement = document.getElementById('timer');

  function updateTimer() {
    timerElement.textContent = "<%= texts.Next_refresh %>: " + seconds;
    seconds -= 1;

    if (seconds < 0) {
      seconds = 60;
      window.location.reload();
    }
  }

  const timerInterval = setInterval(updateTimer, 1000);

  function sortTable(n) {
    let table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
    table = document.getElementById("deviceTable");
    switching = true;
    // Set the sorting direction to ascending:
    dir = "asc";
    /* Make a loop that will continue until
    no switching has been done: */
    while (switching) {
      // Start by saying: no switching is done:
      switching = false;
      rows = table.rows;
      /* Loop through all table rows (except the
      first, which contains table headers): */
      for (i = 1; i < (rows.length - 1); i++) {
        // Start by saying there should be no switching:
        shouldSwitch = false;
        /* Get the two elements you want to compare,
        one from current row and one from the next: */
        x = rows[i].getElementsByTagName("TD")[n];
        y = rows[i + 1].getElementsByTagName("TD")[n];
        /* Check if the two rows should switch place,
        based on the direction, asc or desc: */
        if (dir == "asc") {
          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
            // If so, mark as a switch and break the loop:
            shouldSwitch = true;
            break;
          }
        } else if (dir == "desc") {
          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
            // If so, mark as a switch and break the loop:
            shouldSwitch = true;
            break;
          }
        }
      }
      if (shouldSwitch) {
        /* If a switch has been marked, make the switch
        and mark that a switch has been done: */
        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
        switching = true;
        // Each time a switch is done, increase this count by 1:
        switchcount++;
      } else {
        /* If no switching has been done AND the direction is "asc",
        set the direction to "desc" and run the while loop again. */
        if (switchcount == 0 && dir == "asc") {
          dir = "desc";
          switching = true;
        }
      }
    }
  }
</script>

<%- include('frameBottom') -%>