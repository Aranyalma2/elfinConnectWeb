<%- include('frameTop') -%>

<section>
  <div class="row">
    <div class="col">
      <h2 class="mb-4"><%= device.hostName %></h2>
    </div>
    <div class="col text-end mb-4">
      <a href="" class="btn btn-success"><i class="bi bi-pencil-square"></i> <%= texts.test %></a>
      <a href="" class="btn btn-primary"><%= texts.test %></a>
    </div>
  </div>

  <div class="d-flex flex-row justify-content-start flex-wrap">
    <% if (typeof viewComponents !=='undefined' ) { for (let i = 0; i < viewComponents.length; i++) { %>
    <div class="card m-1" style="width: 200px; height: 200px;">
      <div class="card-body d-flex justify-content-between">
        <div>
          <h5 class="card-title fw-bold"><%= viewComponents[i].name %></h5>
          <p class="card-text"><%- viewComponents[i].html %></p>
        </div>
      </div>
    </div>
    <% }} %>
  </div>


  </sections>


  <script>
    //deviceMAC is a variable that contains the MAC address of the device
    //It`s for optimization purposes, so database query is not needed for API requests functionalities
    const deviceMAC = '<%= device.macAddress %>';

    function addActiveRequestListeners() {

      const viewControll_ButtonElements = document.getElementsByClassName('viewControll-button');
      const viewControll_SwitchElements = document.getElementsByClassName('viewControll-switch');

      for (let i = 0; i < viewControll_ButtonElements.length; i++) {
        const button = viewControll_ButtonElements[i].querySelector('button');
        const data = JSON.parse(viewControll_ButtonElements[i].querySelector('a').innerText);
        data['destinationMAC'] = deviceMAC;

        button.addEventListener('click', function() {
          sendRequest(data);
        });
      }
    }

    async function passiveRequestRunner() {
      const viewControll_LampElements = document.getElementsByClassName('viewControll-lamp');
      const viewControll_NumberDisplayElements = document.getElementsByClassName('viewControll-numberdisplay');

      const elements = [...viewControll_LampElements, ...viewControll_NumberDisplayElements];

      for (let i = 0; i < elements.length; i++) {
        try {
          // Extract data and add the destinationMAC field
          const data = JSON.parse(elements[i].querySelector('a').innerText);
          data['destinationMAC'] = deviceMAC;

          // Wait for the server's response
          const response = await sendRequest(data);
          
          if (response) {
            if(response.error){
              console.error(`Error processing element ${i}:`, response.error);
              //find the error element
              elements[i].querySelector('.error').innerHTML = response.error;
              continue;
            }
            else {
              //remove error message if exists
              const errorElement = elements[i].querySelector('.error');
              if(errorElement){
                errorElement.innerHTML = '';
              }
            }
            // Update the corresponding HTML element
            const htmlElement = document.getElementById(response.id);
            if (htmlElement) {
              htmlElement.innerHTML = response.data;
            }
          }
        } catch (error) {
          console.error(`Error processing element ${i}:`, error);
        }
      }
    }

    async function sendRequest(data) {
      const postURL = `${window.location.href}/api`;

      try {
        const response = await fetch(postURL, {
          method: 'POST',
          body: JSON.stringify({ data }),
          headers: {
            'Content-Type': 'application/json',
          },
        });

        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }

        return await response.json(); // Parse and return JSON response
      } catch (error) {
        console.error('Error during fetch:', error);
        return null; // Return null on error to handle gracefully
      }
    }

    addActiveRequestListeners();

    passiveRequestRunner();

    setInterval(passiveRequestRunner, 5000);
  </script>

  <%- include('frameBottom') -%>